<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_ZombieBasic</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>minhp = 75;
maxhp = 130;
hp = round(random_range(minhp,maxhp))
damage = 15;
move_speed = 1.5;
alarm[0] = 10;
path = path_add();
value = 50;
alarm[1] = -1;
attackspeed = 48;
itemdroprate = 35;
healthdroprate = 10;
pistolammodroprate = 23 +healthdroprate;
smgammodroprate = 15 +pistolammodroprate;
rifleammodroprate = 15 +smgammodroprate;
shotgunammodroprate = 12 +rifleammodroprate;
vectorammodroprate = 16 +shotgunammodroprate;
topchance = vectorammodroprate;
itemtobedropped = false;
speed_mod = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Whether or not to drop an item
dropnumber = round(random_range(1,100));
if dropnumber &lt;= itemdroprate
{
    itemtobedropped = true;
};
if (itemtobedropped)
{
dropnumber = round(random_range(1,topchance));
    if (dropnumber&gt;=0 &amp;&amp; dropnumber&lt;healthdroprate)
    {
        instance_create(x,y,Obj_Healthpack);
    };
    if (dropnumber&gt;=healthdroprate &amp;&amp; dropnumber&lt;pistolammodroprate)
    {
        instance_create(x,y,Obj_AmmoBoxPistol);
    };
    if (dropnumber&gt;=pistolammodroprate &amp;&amp; dropnumber&lt;smgammodroprate)
    {
        instance_create(x,y,Obj_AmmoBoxSMG);
    };
    if (dropnumber&gt;=smgammodroprate &amp;&amp; dropnumber&lt;rifleammodroprate)
    {
        instance_create(x,y,Obj_AmmoBoxRifle);
    };
    if (dropnumber&gt;=rifleammodroprate &amp;&amp; dropnumber&lt;shotgunammodroprate)
    {
        instance_create(x,y,Obj_AmmoBoxShotgun);
    };
    if (dropnumber&gt;=shotgunammodroprate &amp;&amp; dropnumber&lt;vectorammodroprate)
    {
        instance_create(x,y,Obj_AmmoBoxVector);
    };
}

global.TotalKills += 1;
global.BasicKills += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if collision_point(x,y,obj_player,true,true)
{
audio_play_sound(Snd_PlayerHurt,1,false);
obj_player.hp -= damage;
alarm[1] = attackspeed;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the Path to player
var playerx = (obj_player.x);
var playery = (obj_player.y);

if (mp_grid_path(global.grid, path, x, y, playerx, playery, 1))
{
    path_start(path, move_speed*speed_mod, path_action_stop, false); 
};

alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Determining slowings
if (place_meeting(x, y, Obj_speed_modifier))
{
    var o_spd_mod;
    o_spd_mod = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, Obj_speed_modifier, false, true)
    if (o_spd_mod)
    {
        speed_mod = o_spd_mod.speed_modifier;
    }
}
else
if (place_meeting(x,y,Obj_BrickWindow))
{
    var o_spd_mod;
    o_spd_mod = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, Obj_BrickWindow, false, true)
    if (o_spd_mod)
    {
        speed_mod = o_spd_mod.speed_modifier;
    }
}
else
{
    speed_mod = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if alarm[1] == -1
{
    audio_play_sound(Snd_PlayerHurt,1,false);
    obj_player.hp -= damage;
    global.DamageReceived += damage;
    alarm[1] = attackspeed;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blood = instance_create(x,y,Obj_BloodSpurt);
with (blood)
{
    image_angle = bullet.image_angle;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
image_angle = direction -90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
